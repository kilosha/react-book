import React from 'react';
import { Typography, Button } from '@mui/material';
import { CodeBlock } from 'react-code-blocks';
import ModeContext from '../contexts/ModeContext.js';

const Context = () => {
    const { toggleColorMode, mode } = React.useContext(ModeContext);

    return (
        <div>
            <Typography variant="h4" paragraph>
                Context (useContext)
            </Typography>
            <Typography paragraph>
                Context –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Å–ø–æ—Å–æ–± –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ –¥–µ—Ä–µ–≤–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –±–µ–∑
                –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–æ–ø—Å–æ–≤, –ø–µ—Ä–µ–¥–∞—é—â–∏—Ö—Å—è –ø–æ —Ü–µ–ø–æ—á–∫–µ –æ—Ç —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∫
                –¥–æ—á–µ—Ä–Ω–∏–º.
            </Typography>
            <Typography paragraph>
                Context —Ä–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É props drilling, –∫–æ–≥–¥–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—É –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑
                –Ω–µ—Å–∫–æ–ª—å–∫–æ —É—Ä–æ–≤–Ω–µ–π –¥—Ä—É–≥–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –∏—Ö –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç. –ü—Ä–æ–ø—Å-–¥—Ä–∏–ª–ª–∏–Ω–≥ –º–æ–∂–µ—Ç
                –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –∏–∑–±—ã—Ç–æ—á–Ω–æ—Å—Ç–∏ –∏ —É—Å–ª–æ–∂–Ω–µ–Ω–∏—é –∫–æ–¥–∞. –û–Ω —Ç–∞–∫–∂–µ –¥–µ–ª–∞–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –±–æ–ª–µ–µ
                –∑–∞–≤–∏—Å–∏–º—ã–º–∏ –æ—Ç –∏—Ö –∏–µ—Ä–∞—Ä—Ö–∏–∏, —á—Ç–æ –º–æ–∂–µ—Ç –∑–∞—Ç—Ä—É–¥–Ω–∏—Ç—å –∏—Ö –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∏ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—é.
            </Typography>
            <Typography paragraph variant="h5">
                –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Context (–Ω–∞ –ø—Ä–∏–º–µ—Ä–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã —ç—Ç–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è üòé):
                <Button sx={{ ml: 1 }} onClick={toggleColorMode}>
                    –ù–∞–∂–º–∏ –º–µ–Ω—è (—Ç–µ–∫—É—â–∞—è —Ç–µ–º–∞: {mode})
                </Button>
            </Typography>
            <Typography paragraph variant="h6">
                –®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
            </Typography>
            <Typography paragraph>
                –°–Ω–∞—á–∞–ª–∞ –º—ã –¥–æ–ª–∂–Ω—ã —Å–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ `createContext()` –∏–∑ –º–æ–¥—É–ª—è
                react. –í —ç—Ç–æ–º –ø—Ä–∏–º–µ—Ä–µ –Ω–∏–∂–µ —Å–æ–∑–¥–∞–µ—Ç—Å—è –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å –ø–æ–º–æ—â—å—é `createContext()` –∏
                —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è (–≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å
                default –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤):
            </Typography>
            <Typography paragraph>
                <CodeBlock
                    language={'js'}
                    text={`//contexts/ModeContext.js 
import React from 'react'; 
const ModeContext = React.createContext({ toggleColorMode: () => {} }); 
export default ModeContext;`}
                />
            </Typography>

            <Typography paragraph variant="h6">
                –®–∞–≥ 2: –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
            </Typography>
            <Typography paragraph variant="caption">
                * —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã –∫–æ–¥–∞, –æ—Ç–Ω–æ—Å—è—â–∏–µ—Å—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—é —Ç–µ–º—ã –¥–ª—è MUI, –æ–ø—É—â–µ–Ω—ã, —ç—Ç–æ
                –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã —Å –∫–æ–Ω—Ç–µ–∫—Ç–æ–º. –ü–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞.
            </Typography>
            <Typography paragraph>
                –°–ª–µ–¥—É—é—â–∏–º —à–∞–≥–æ–º –Ω—É–∂–Ω–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –≤–Ω—É—Ç—Ä–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞-–ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞.
                –ö–æ–º–ø–æ–Ω–µ–Ω—Ç-–ø—Ä–æ–≤–∞–π–¥–µ—Ä –æ–±–µ—Ä—Ç—ã–≤–∞–µ—Ç –¥–µ—Ä–µ–≤–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–º –Ω—É–∂–µ–Ω –¥–æ—Å—Ç—É–ø –∫ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É.
            </Typography>
            <Typography paragraph variant="subtitle1">
                –í–∞—Ä–∏–∞–Ω—Ç 1. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ –≤ —Å–∞–º–æ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ
            </Typography>
            <Typography paragraph>
                –í —ç—Ç–æ–º –ø—Ä–∏–º–µ—Ä–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è ModeContext.Provider –¥–ª—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è
                –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞. –ó–Ω–∞—á–µ–Ω–∏–µ value –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –≤—Å–µ–º –¥–æ—á–µ—Ä–Ω–∏–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º, –∫–æ—Ç–æ—Ä—ã–µ
                –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —ç—Ç–æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç.
            </Typography>
            <Typography paragraph>
                <CodeBlock
                    language={'js'}
                    text={`// App.js
import React from 'react';
import ModeContext from './contexts/ModeContext.js';
import ComponentA from './ComponentA';

const App = () => {
    const [mode, setMode] = React.useState('light');
    const toggleColorMode = () => {
        setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));
    };

    return (
        <ModeContext.Provider value={{toggleColorMode, mode}}>
            <ComponentA />
        </ModeContext.Provider>
    );
}

export default App;`}
                />
            </Typography>

            <Typography paragraph variant="subtitle1">
                –í–∞—Ä–∏–∞–Ω—Ç 2. –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –¥–ª—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
            </Typography>
            <Typography paragraph>
                –ß—Ç–æ–±—ã –æ—Ç–¥–µ–ª–∏—Ç—å –≤—Å—é –ª–æ–≥–∏–∫—É –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ –æ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤, –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—É—é –ø–∞–ø–∫—É
                providers, –≥–¥–µ —Ö—Ä–∞–Ω–∏—Ç—å –≤—Å–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã –∏ –∏—Ö –ª–æ–≥–∏–∫—É. –ü—Ä–∏–º–µ—Ä –Ω–∏–∂–µ:
            </Typography>
            <Typography paragraph>
                <CodeBlock
                    language={'js'}
                    text={`// providers/ModeProvider.js
import React from 'react';
import ModeContext from '../contexts/ModeContext.js';

const ModeProvider = ({ children }) => {
    const [mode, setMode] = React.useState('light');
    const toggleColorMode = () => {
        setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));
    };

    return (
        <ModeContext.Provider value={{toggleColorMode, mode}}>
                {children}
        </ModeContext.Provider>
    )
}

export default ModeProvider;

// App.js
import React from 'react';
import ModeProvider from './providers/ModeProvider.js';
import ComponentA from './ComponentA';

const App = () => {
    return (
        <ModeProvider>
            <ComponentA />
        </ModeProvider>
    );
}

export default App;`}
                />
            </Typography>

            <Typography paragraph variant="h6">
                –®–∞–≥ 3: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ö—É–∫–∞ useContext
            </Typography>
            <Typography paragraph>
                –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ö—É–∫ useContext –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞, —á—Ç–æ–±—ã
                –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∑–Ω–∞—á–µ–Ω–∏—é –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞. –í —ç—Ç–æ–º –ø—Ä–∏–º–µ—Ä–µ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º useContext –∏–∑ react
                –∏ –≤—ã–∑—ã–≤–∞–µ–º –µ–≥–æ, –ø–µ—Ä–µ–¥–∞–≤–∞—è –∫–æ–Ω—Ç–µ–∫—Å—Ç ModeContext. –•—É–∫ useContext –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ
                –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ —Å –ø–æ–º–æ—â—å—é –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏–∏ –º—ã –ø–æ–ª—É—á–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ
                –Ω–∞–º –∑–Ω–∞—á–µ–Ω–∏—è. –ü—Ä–∏–º–µ—Ä:
            </Typography>
            <Typography paragraph>
                <CodeBlock
                    language={'jsx'}
                    text={`// ComponentA.jsx
import React, { useContext } from 'react';
import ModeContext from '../contexts/ModeContext.js';
import ComponentB from './ComponentB';

function ComponentA() {
  const {toggleColorMode, mode} = useContext(ModeContext);

  return (
    <div>
      <h2>Component A</h2>
      <p>–¢–µ–∫—É—â–∞—è —Ç–µ–º–∞: {mode}</p>
      <button onClick={toggleColorMode}>–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–º—É</button>
      <ComponentB />
    </div>
  );
}

export default ComponentA;`}
                />
            </Typography>

            <Typography paragraph variant="h6">
                –®–∞–≥ 4: –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç (–µ—â–µ –æ–¥–∏–Ω –≤–∞—Ä–∏–∞–Ω—Ç)
            </Typography>
            <Typography paragraph>
                –ï—Å—Ç—å –µ—â–µ –æ–¥–∏–Ω –≤–∞—Ä–∏–∞–Ω—Ç –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö, –≥–¥–µ –Ω—É–∂–Ω—ã –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ
                –∑–Ω–∞—á–µ–Ω–∏—è. –î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è ModeContext.Consumer. –ó–Ω–∞—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –±—É–¥–µ—Ç
                –¥–æ—Å—Ç—É–ø–Ω–æ –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏-—Ä–µ–Ω–¥–µ—Ä–µ—Ä–∞ –≤ –≤–∏–¥–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ (—Ç—É—Ç —Å–Ω–æ–≤–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏
                –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—é).
            </Typography>
            <Typography paragraph>
                <CodeBlock
                    language={'jsx'}
                    text={`// ComponentA.jsx
import React from 'react';
import ModeContext from '../contexts/ModeContext.js';
import ComponentB from './ComponentB';

function ComponentA() {
  return (
    <div>
      <h2>Component A</h2>
      <ModeContext.Consumer>
        {({ toggleColorMode, mode }) => (
            <p>–¢–µ–∫—É—â–∞—è —Ç–µ–º–∞: {mode}</p>
            <button onClick={toggleColorMode}>–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–º—É</button>
        )}
      </ModeContext.Consumer>
      <ComponentB />
    </div>
  );
}

export default ComponentA;`}
                />
            </Typography>
        </div>
    );
};

export default Context;
