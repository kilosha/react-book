import { Typography, List, ListItemText } from '@mui/material';
import { CodeBlock } from 'react-code-blocks';

const Forms = () => {
    return (
        <div>
            <Typography variant="h4" paragraph>
                –§–æ—Ä–º—ã –∏ –∏—Ö –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤ React. react-hook-form VS <b>formik</b>
            </Typography>
            <Typography paragraph>
                –§–æ—Ä–º—ã - —ç—Ç–æ —á–∞—Å—Ç—å –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π. –û–¥–Ω–∞–∫–æ –∏—Ö —Å–æ–∑–¥–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–∂–µ—Ç
                –±—ã—Ç—å —Å–ª–æ–∂–Ω—ã–º –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤.
            </Typography>
            <Typography paragraph component="div">
                –í React —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ø–æ—Å–æ–±–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ñ–æ—Ä–º –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
                –æ—Ç –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π –∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞. –ù–∏–∂–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω—ã –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
                –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ñ–æ—Ä–º –≤ React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏:
                <List sx={{ margin: '0 20px', listStyle: 'disc' }}>
                    <ListItemText sx={{ display: 'list-item' }}>
                        <b>–£–ø—Ä–∞–≤–ª—è–µ–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ñ–æ—Ä–º:</b> –í —ç—Ç–æ–º –ø–æ–¥—Ö–æ–¥–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã
                        —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞. –ö–∞–∂–¥–æ–µ –ø–æ–ª–µ —Ñ–æ—Ä–º—ã —Å–≤—è–∑–∞–Ω–æ —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∏
                        –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ callback-—Ñ—É–Ω–∫—Ü–∏—é.
                    </ListItemText>
                    <ListItemText sx={{ display: 'list-item' }}>
                        <b>–ù–µ—É–ø—Ä–∞–≤–ª—è–µ–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ñ–æ—Ä–º:</b> –í —ç—Ç–æ–º –ø–æ–¥—Ö–æ–¥–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã
                        —Ö—Ä–∞–Ω—è—Ç—Å—è –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –≤ DOM, –∞ –Ω–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.
                    </ListItemText>
                    <ListItemText sx={{ display: 'list-item' }}>
                        <b>Ref-–ø–æ–¥—Ö–æ–¥:</b> –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã —Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ ref,
                        –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–∑–≤–æ–ª—è—é—Ç –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ DOM-—ç–ª–µ–º–µ–Ω—Ç–∞–º. –≠—Ç–æ—Ç –ø–æ–¥—Ö–æ–¥ –º–æ–∂–µ—Ç –±—ã—Ç—å
                        —É–¥–æ–±–µ–Ω (–Ω–µ—Çüòê), –∫–æ–≥–¥–∞ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –±—ã—Å—Ç—Ä–æ –ø–æ–ª—É—á–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–µ–π –±–µ–∑ —è–≤–Ω–æ–≥–æ
                        —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Ö –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.
                    </ListItemText>
                    <ListItemText sx={{ display: 'list-item' }}>
                        <b>–ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–æ—Ä–º–∞–º–∏:</b> –°—É—â–µ—Å—Ç–≤—É—é—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∏, —Ç–∞–∫–∏–µ –∫–∞–∫
                        <b> React Hook Form</b> –∏ <b>Formik</b> , –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç –±–æ–ª–µ–µ
                        –≤—ã—Å–æ–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–æ—Ä–º–∞–º–∏. –û–Ω–∏ —É–ø—Ä–æ—â–∞—é—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
                        —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º, –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π, –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏ –¥—Ä—É–≥–∏–º–∏ –∞—Å–ø–µ–∫—Ç–∞–º–∏ —Ä–∞–±–æ—Ç—ã —Å
                        —Ñ–æ—Ä–º–∞–º–∏.
                    </ListItemText>
                </List>
            </Typography>
            <Typography variant="h5" paragraph>
                React Hook Form
            </Typography>
            <Typography paragraph>
                <b>React Hook Form </b> - —ç—Ç–æ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É–ø—Ä–æ—â–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å
                —Ä–∞–±–æ—Ç—ã —Å —Ñ–æ—Ä–º–∞–º–∏ –≤ React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö. –û–Ω–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∏
                –¥—Ä—É–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã —Å –º–∏–Ω–∏–º—É–º–æ–º –ª–∏—à–Ω–µ–≥–æ –∫–æ–¥–∞.
            </Typography>
            <Typography variant="h6" paragraph>
                –û—Å–Ω–æ–≤—ã –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
            </Typography>
            <Typography paragraph>
                1. –£—Å—Ç–∞–Ω–æ–≤–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫—É <b>React Hook Form</b>: <b>npm install react-hook-form</b>
            </Typography>
            <Typography paragraph>2. –ò–º–ø–æ—Ä—Ç –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ö—É–∫–∞:</Typography>
            <Typography paragraph>
                –í–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã, –≤—ã–∑–æ–≤–∏ —Ö—É–∫ useForm() –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:
            </Typography>
            <Typography paragraph>
                <CodeBlock
                    language={'js'}
                    text={`import { useForm } from 'react-hook-form';

const Test = () => {
    const { register, handleSubmit, formState: { errors } } = useForm();
    ///...
}`}
                />
            </Typography>
            <Typography paragraph>3. –°–æ–∑–¥–∞–Ω–∏–µ –§–æ—Ä–º—ã:</Typography>
            <Typography paragraph>
                <CodeBlock
                    language={'js'}
                    text={`<form onSubmit={handleSubmit(onSubmit)}>
    {/* –ü–æ–ª—è —Ñ–æ—Ä–º—ã */}
</form>`}
                />
            </Typography>
            <Typography paragraph>4. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ü–æ–ª–µ–π:</Typography>
            <Typography paragraph>–ù–∞—á–∏–Ω–∞–π –æ–ø–∏—Å—ã–≤–∞—Ç—å –ø–æ–ª—è —Ñ–æ—Ä–º—ã –∏—Å–ø–æ–ª—å–∑—É—è register:</Typography>
            <Typography paragraph>
                <CodeBlock language={'js'} text={`<input {...register('name')} />`} />
            </Typography>
            <Typography paragraph>5. –í–∞–ª–∏–¥–∞—Ü–∏—è:</Typography>
            <Typography paragraph>
                <b>React Hook Form</b> –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–µ—Ö–∞–Ω–∏–∑–º –≤–∞–ª–∏–¥–∞—Ü–∏–∏:
            </Typography>
            <Typography paragraph>
                <CodeBlock
                    language={'js'}
                    text={`<input
    type='number'
    {...register('age', {
        required: '–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ',
        min: {
            value: 18,
            message: '–í–∞–º –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 18 –ª–µ—Ç –∏–ª–∏ –±–æ–ª—å—à–µ'
        }
    })}
/>
<p>{errors.age?.message}</p>`}
                />
            </Typography>
            <Typography paragraph>6. –û–±—Ä–∞–±–æ—Ç–∫–∞ –û—Ç–ø—Ä–∞–≤–∫–∏:</Typography>
            <Typography paragraph>
                –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é onSubmit, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º—ã:
            </Typography>
            <Typography paragraph>
                <CodeBlock
                    language={'js'}
                    text={`const onSubmit = (data) => {
    console.log(data);
};`}
                />
            </Typography>
            <Typography paragraph>7. –ö–Ω–æ–ø–∫–∞ –û—Ç–ø—Ä–∞–≤–∫–∏:</Typography>
            <Typography paragraph>–î–æ–±–∞–≤—å—Ç–µ –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏, —Å–≤—è–∑–∞–Ω–Ω—É—é —Å handleSubmit:</Typography>
            <Typography paragraph>
                <CodeBlock language={'js'} text={`<button type="submit">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>`} />
            </Typography>

            <Typography variant="h6" paragraph>
                –ö–µ–π—Å—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏:
            </Typography>
            <Typography paragraph>
                <b>register</b> - —ç—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ react-hook-form, –∫–æ—Ç–æ—Ä–∞—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
                –¥–ª—è —Å–≤—è–∑—ã–≤–∞–Ω–∏—è –∏–Ω–ø—É—Ç–æ–≤ –∏ –¥—Ä—É–≥–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ñ–æ—Ä–º—ã —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π —Ñ–æ—Ä–º—ã.
            </Typography>
            <Typography paragraph component="div">
                –ö–æ–≥–¥–∞ —Ç—ã –≤—ã–∑—ã–≤–∞–µ—à—å register('fieldName', validationRules), –±–∏–±–ª–∏–æ—Ç–µ–∫–∞
                react-hook-form –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:
                <List sx={{ margin: '0 20px', listStyle: 'disc' }}>
                    <ListItemText sx={{ display: 'list-item' }}>
                        –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–æ–ª–µ –≤–Ω—É—Ç—Ä–∏ —Ç–≤–æ–µ–π —Ñ–æ—Ä–º—ã, —Å–≤—è–∑—ã–≤–∞—è –µ–≥–æ —Å –∏–º–µ–Ω–µ–º fieldName.
                    </ListItemText>
                    <ListItemText sx={{ display: 'list-item' }}>
                        –ü—Ä–∏–º–µ–Ω—è–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ (validationRules) –∫ —ç—Ç–æ–º—É –ø–æ–ª—é.
                    </ListItemText>
                </List>
            </Typography>
            <Typography paragraph>–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è register:</Typography>
            <Typography paragraph>
                1. <b>–ë–∞–∑–æ–≤–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:</b>
            </Typography>
            <Typography paragraph>
                <CodeBlock language={'js'} text={`<input {...register('name')} />`} />
            </Typography>
            <Typography paragraph>
                –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ name - —ç—Ç–æ –∏–º—è –ø–æ–ª—è –≤ —Ç–≤–æ–µ–º –æ–±—ä–µ–∫—Ç–µ –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø–µ—Ä–µ–¥–∞–Ω –≤
                —Ñ—É–Ω–∫—Ü–∏—é onSubmit.
            </Typography>
            <Typography paragraph>
                2. <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –≤–∞–ª–∏–¥–∞—Ü–∏–∏:</b>
            </Typography>
            <Typography paragraph>
                <CodeBlock
                    language={'js'}
                    text={`<input {...register('email', { required: '–í–≤–µ–¥–∏—Ç–µ email' })} />`}
                />
            </Typography>
            <Typography paragraph>
                –ó–¥–µ—Å—å –º—ã –¥–æ–±–∞–≤–∏–ª–∏ –ø—Ä–∞–≤–∏–ª–æ, —á—Ç–æ –ø–æ–ª–µ email –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è. –ï—Å–ª–∏ —ç—Ç–æ –ø–æ–ª–µ
                –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –ø—É—Å—Ç—ã–º, –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ "–í–≤–µ–¥–∏—Ç–µ email".
            </Typography>
            <Typography paragraph>
                3. <b>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø—Ä–∞–≤–∏–ª:</b>
            </Typography>
            <Typography paragraph>
                <CodeBlock
                    language={'js'}
                    text={`<input
    {...register('age', {
        required: '–£–∫–∞–∂–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç',
        min: { value: 18, message: '–í–∞–º –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 18 –ª–µ—Ç –∏–ª–∏ –±–æ–ª—å—à–µ' }
    })}
/>`}
                />
            </Typography>
            <Typography paragraph>
                –í —ç—Ç–æ–º –ø—Ä–∏–º–µ—Ä–µ –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∞–≤–∏–ª: required –¥–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø–æ–ª—è –∏
                min –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —á—Ç–æ –≤–æ–∑—Ä–∞—Å—Ç –±–æ–ª—å—à–µ 18 –ª–µ—Ç.
            </Typography>
            <Typography paragraph>
                4. <b>–ü–æ–ª–µ —Å —Ç–∏–ø–æ–º radio –∏–ª–∏ checkbox:</b>
            </Typography>
            <Typography paragraph>
                <CodeBlock
                    language={'js'}
                    text={`<input type="radio" {...register('gender', { required: '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª' })} value="male" />
<input type="radio" {...register('gender', { required: '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª' })} value="female" />`}
                />
            </Typography>
            <Typography paragraph>
                –ó–¥–µ—Å—å –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ –∏–º—è gender –¥–ª—è –æ–±–µ–∏—Ö —Ä–∞–¥–∏–æ-–∫–Ω–æ–ø–æ–∫, —á—Ç–æ–±—ã –æ–Ω–∏ –±—ã–ª–∏
                —Å–≤—è–∑–∞–Ω—ã –∫–∞–∫ –≥—Ä—É–ø–ø–∞. –ï—Å–ª–∏ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ –Ω–∏ –æ–¥–Ω–æ –∏–∑ –∑–Ω–∞—á–µ–Ω–∏–π, –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
                "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª".
            </Typography>
            <Typography paragraph>
                4. <b>–ü–æ–ª–µ —Å –ø–∞—Ç—Ç–µ—Ä–Ω–æ–º –≤–∞–ª–∏–¥–∞—Ü–∏–∏:</b>
            </Typography>
            <Typography paragraph>
                <CodeBlock
                    language={'js'}
                    text={`<input
    {...register('email', {
        required: '–ü–æ–ª–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è',
        pattern: {
            value: /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}$/,
            message: '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email'
        }
    })}
/>`}
                />
            </Typography>
            <Typography paragraph>
                –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–æ, –µ—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–Ω—ã–π email –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —à–∞–±–ª–æ–Ω—É
                –∏–ª–∏ –µ—Å–ª–∏ –ø–æ–ª–µ –æ—Å—Ç–∞–ª–æ—Å—å –ø—É—Å—Ç—ã–º.
            </Typography>
            <Typography paragraph>
                –û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ register –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ Controller, –∏ –∏—Ö –Ω–µ–ª—å–∑—è
                –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞—Ç—å –≤ –æ–¥–Ω–æ–º –ø–æ–ª–µ. –¢–µ–±–µ —Å–ª–µ–¥—É–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–∏–±–æ register, –ª–∏–±–æ
                Controller, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π.
            </Typography>

            <Typography variant="h6" paragraph>
                Controller
            </Typography>
            <Typography paragraph component="div">
                –í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–∏—Ç—É–∞—Ü–∏–π, –∫–æ–≥–¥–∞ —Å—Ç–æ–∏—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Controller:
                <List sx={{ margin: '0 20px', listStyle: 'disc' }}>
                    <ListItemText sx={{ display: 'list-item' }}>
                        <b>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫ (ANTD –∏–ª–∏ MUI): React Hook Form </b>
                        —Å–¥–µ–ª–∞–ª –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å –≤–Ω–µ—à–Ω–∏–º–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ
                        –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ–π.
                    </ListItemText>
                    <ListItemText sx={{ display: 'list-item' }}>
                        <b>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏:</b> –ï—Å–ª–∏ –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ
                        —Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏, —Ç–∞–∫–∏–µ –∫–∞–∫ yup –∏–ª–∏ joi, Controller –ø–æ–∑–≤–æ–ª—è–µ—Ç
                        –≤–∞–º –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å –∏—Ö –ø—Ä–∞–≤–∏–ª–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Å —Ñ–æ—Ä–º–æ–π.
                    </ListItemText>
                </List>
            </Typography>
            <Typography paragraph>
                –ü—Ä–∏–º–µ—Ä –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ <b>React Hook Form</b> + ANTD
            </Typography>
            <Typography paragraph>
                <CodeBlock
                    language={'js'}
                    text={`import React from 'react';
import { useForm, Controller } from 'react-hook-form';
import { Input, Radio, Checkbox, DatePicker, Button } from 'antd';

const FormWithRHFController = () => {
    const {
        handleSubmit,
        control,
        formState: { errors }
    } = useForm();

    const onSubmit = data => {
        console.log(data);
    }

    return (
        <form onSubmit={handleSubmit(onSubmit)}>
            <div>
                <label>Email:</label>
                <Controller
                    name='email'
                    control={control}
                    rules={{
                    required: '–ü–æ–ª–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è',
                    pattern: {
                        value: /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}$/,
                        message: '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email'
                    }
                    }}
                    render={({ field }) => <Input {...field} placeholder='Email' />}
                />
                <p>{errors.email?.message}</p>
            </div>

            <div>
                <label>–¢–µ–∫—Å—Ç:</label>
                <Controller
                    name='text'
                    control={control}
                    rules={{ required: '–ü–æ–ª–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è' }}
                    render={({ field }) => <Input {...field} placeholder='–¢–µ–∫—Å—Ç' />}
                />
                <p>{errors.text?.message}</p>
            </div>

            <div>
                <label>–ß–∏—Å–ª–æ:</label>
                <Controller
                    name='number'
                    control={control}
                    rules={{ required: '–ü–æ–ª–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è' }}
                    render={({ field }) => (
                    <Input type='number' {...field} placeholder='–ß–∏—Å–ª–æ' />
                    )}
                />
                <p>{errors.number?.message}</p>
            </div>

            <div>
                <label>–ü–æ–ª:</label>
                <Controller
                    name='gender'
                    control={control}
                    rules={{ required: '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª' }}
                    render={({ field }) => (
                    <Radio.Group {...field}>
                        <Radio value='male'>–ú—É–∂—Å–∫–æ–π</Radio>
                        <Radio value='female'>–ñ–µ–Ω—Å–∫–∏–π</Radio>
                    </Radio.Group>
                    )}
                />
                <p>{errors.gender?.message}</p>
            </div>

            <div>
                <label>–ß–µ–∫–±–æ–∫—Å:</label>
                <Controller
                    name='checkbox'
                    control={control}
                    rules={{ required: '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤—ã–±–æ—Ä' }}
                    render={({ field }) => <Checkbox {...field}>–Ø —Å–æ–≥–ª–∞—Å–µ–Ω</Checkbox>}
                />
                <p>{errors.checkbox?.message}</p>
            </div>

            <div>
                <label>–î–∞—Ç–∞:</label>
                <Controller
                    name='date'
                    control={control}
                    rules={{ required: '–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É' }}
                    render={({ field }) => <DatePicker {...field} />}
                />
                <p>{errors.date?.message}</p>
            </div>

            <Button type='primary' htmlType='submit'>
                –û—Ç–ø—Ä–∞–≤–∏—Ç—å
            </Button>
        </form>
    )
}

export default FormWithRHFController;`}
                />
            </Typography>
            <Typography paragraph>
                –ü—Ä–∏–º–µ—Ä –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ <b>React Hook Form</b> + ANTD + yup
            </Typography>
            <Typography paragraph>
                <CodeBlock
                    language={'js'}
                    text={`import React from 'react';
import { useForm, Controller } from 'react-hook-form';
import { Input, Radio, Checkbox, DatePicker, Button } from 'antd';
import 'antd/dist/antd.css';
import * as yup from 'yup';

const schema = yup.object().shape({
    email: yup.string().required('–ü–æ–ª–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è').email('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email'),
    text: yup.string().required('–ü–æ–ª–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è'),
    number: yup.number().required('–ü–æ–ª–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è'),
    gender: yup.string().required('–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª'),
    checkbox: yup.boolean().oneOf([true], '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤—ã–±–æ—Ä'),
    date: yup.date().required('–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É'),
});

const App = () => {
    const { handleSubmit, control, formState: { errors } } = useForm({
        resolver: yupResolver(schema),
    });

    const onSubmit = (data) => {
        console.log(data);
    };

    return (
        <form onSubmit={handleSubmit(onSubmit)}>
            <div>
                <label>Email:</label>
                <Controller
                    name="email"
                    control={control}
                    render={({ field }) => <Input {...field} placeholder="Email" />}
                />
                <p>{errors.email?.message}</p>
            </div>

            <div>
                <label>–¢–µ–∫—Å—Ç:</label>
                <Controller
                    name="text"
                    control={control}
                    render={({ field }) => <Input {...field} placeholder="–¢–µ–∫—Å—Ç" />}
                />
                <p>{errors.text?.message}</p>
            </div>

            <div>
                <label>–ß–∏—Å–ª–æ:</label>
                <Controller
                    name="number"
                    control={control}
                    render={({ field }) => <Input type="number" {...field} placeholder="–ß–∏—Å–ª–æ" />}
                />
                <p>{errors.number?.message}</p>
            </div>

            <div>
                <label>–ü–æ–ª:</label>
                <Controller
                    name="gender"
                    control={control}
                    render={({ field }) => (
                    <Radio.Group {...field}>
                        <Radio value="male">–ú—É–∂—Å–∫–æ–π</Radio>
                        <Radio value="female">–ñ–µ–Ω—Å–∫–∏–π</Radio>
                    </Radio.Group>
                    )}
                />
                <p>{errors.gender?.message}</p>
            </div>

            <div>
                <label>–ß–µ–∫–±–æ–∫—Å:</label>
                <Controller
                    name="checkbox"
                    control={control}
                    render={({ field }) => <Checkbox {...field}>–Ø —Å–æ–≥–ª–∞—Å–µ–Ω</Checkbox>}
                />
                <p>{errors.checkbox?.message}</p>
            </div>

            <div>
                <label>–î–∞—Ç–∞:</label>
                <Controller
                    name="date"
                    control={control}
                    render={({ field }) => <DatePicker {...field} />}
                />
                <p>{errors.date?.message}</p>
            </div>

            <Button type="primary" htmlType="submit">
                –û—Ç–ø—Ä–∞–≤–∏—Ç—å
            </Button>
        </form>
    );
};

export default App;`}
                />
            </Typography>
            <Typography variant="h6" paragraph>
                –ó–∞–∫–ª—é—á–µ–Ω–∏–µ
            </Typography>
            <Typography paragraph>
                –° –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º <b>React Hook Form</b>, —Å–æ–∑–¥–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞–º–∏ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è
                –Ω–∞–º–Ω–æ–≥–æ –ø—Ä–æ—â–µ. –¢—ã –º–æ–∂–µ—à—å –ª–µ–≥–∫–æ –¥–æ–±–∞–≤–ª—è—Ç—å –ø–æ–ª—è –≤–≤–æ–¥–∞, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
                –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã.
            </Typography>

            <Typography variant="h5" paragraph>
                Formik
            </Typography>
            <Typography paragraph>
                <b>Formik </b> - —ç—Ç–æ –µ—â–µ –æ–¥–Ω–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–æ—Ä–º–∞–º–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö –Ω–∞
                React. –ï—ë –æ—Å–Ω–æ–≤–Ω–∞—è —Ü–µ–ª—å - —É–ø—Ä–æ—Å—Ç–∏—Ç—å –∏ –æ–±–ª–µ–≥—á–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞–±–æ—Ç—ã —Å —Ñ–æ—Ä–º–∞–º–∏, —Å–±–æ—Ä–∞
                –¥–∞–Ω–Ω—ã—Ö –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∏—Ö –≤–∞–ª–∏–¥–∞—Ü–∏–∏.
            </Typography>
            <Typography variant="h6" paragraph>
                –û—Å–Ω–æ–≤—ã –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
            </Typography>
            <Typography paragraph>
                1. –£—Å—Ç–∞–Ω–æ–≤–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫—É <b>Formik</b>: <b>npm install formik</b>
            </Typography>
            <Typography paragraph>2. –ò–º–ø–æ—Ä—Ç –∏ c–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —Ñ–æ—Ä–º—ã:</Typography>
            <Typography paragraph>
                –û–±–µ—Ä–Ω–∏ —Ñ–æ—Ä–º—É –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç <b>Formik</b>, –ø–µ—Ä–µ–¥–∞–≤–∞—è –Ω–∞—á–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è (initialValues)
                –∏ —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ (onSubmit):
            </Typography>
            <Typography paragraph>
                <CodeBlock
                    language={'js'}
                    text={`<Formik
    initialValues={{ username: '', email: '' }}
    onSubmit={(values) => {
        console.log(values);
    }}>
    <Form>
        {/* –≠–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã –±—É–¥—É—Ç –∑–¥–µ—Å—å */}
    </Form>
</Formik>`}
                />
            </Typography>
            <Typography paragraph>3. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ü–æ–ª–µ–π:</Typography>
            <Typography paragraph>
                –î–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—è –≤–≤–æ–¥–∞, –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç Field, –ø–µ—Ä–µ–¥–∞–≤–∞—è –µ–º—É –∏–º—è –ø–æ–ª—è:
            </Typography>
            <Typography paragraph>
                <CodeBlock
                    language={'js'}
                    text={`<Field type="text" name="username" placeholder="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" />
<ErrorMessage name="username" component="div" />`}
                />
            </Typography>
            <Typography paragraph>4. –í–∞–ª–∏–¥–∞—Ü–∏—è:</Typography>
            <Typography paragraph>
                –¢—ã –º–æ–∂–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø—Ä—è–º–æ –≤ Field, –∏—Å–ø–æ–ª—å–∑—É—è –∞—Ç—Ä–∏–±—É—Ç validate:
            </Typography>
            <Typography paragraph>
                <CodeBlock
                    language={'js'}
                    text={`<Field
    type="email"
    name="email"
    placeholder="–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞"
    validate={(value) => {
        let error;
        if (!value) {
            error = '–ü–æ–ª–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ';
        } else if (!/\\S+@\\S+\\.\\S+/.test(value)) {
            error = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∞–¥—Ä–µ—Å';
        }
        return error;
    }}/>
    <ErrorMessage name="email" component="div" />`}
                />
            </Typography>
            <Typography paragraph>5. –û–±—Ä–∞–±–æ—Ç–∫–∞ –û—Ç–ø—Ä–∞–≤–∫–∏:</Typography>
            <Typography paragraph>
                <b>Formik</b> –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã. –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ onSubmit
                –±—É–¥–µ—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—Å–µ –ø–æ–ª—è –ø—Ä–æ—à–ª–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—é.
            </Typography>
            <Typography paragraph>6. –ö–Ω–æ–ø–∫–∞ –û—Ç–ø—Ä–∞–≤–∫–∏:</Typography>
            <Typography paragraph>–î–æ–±–∞–≤—å –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–Ω—É—Ç—Ä–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ Form:</Typography>
            <Typography paragraph>
                <CodeBlock language={'js'} text={`<button type="submit">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>`} />
            </Typography>
            <Typography paragraph>–ü—Ä–∏–º–µ—Ä —Ñ–æ—Ä–º—ã</Typography>
            <Typography paragraph>
                <CodeBlock
                    language={'js'}
                    text={`import React from 'react';
import { Formik, Form, Field, ErrorMessage } from 'formik';

const RegistrationForm = () => {
    return (
        <Formik
        initialValues={{ username: '', email: '' }}
        onSubmit={(values) => {
            console.log(values);
        }}
        >
            <Form>
                <Field type="text" name="username" placeholder="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" />
                <ErrorMessage name="username" component="div" />

                <Field
                    type="email"
                    name="email"
                    placeholder="–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞"
                    validate={(value) => {
                        let error;
                        if (!value) {
                            error = '–ü–æ–ª–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ';
                        } else if (!/\\S+@\\S+\\.\\S+/.test(value)) {
                            error = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∞–¥—Ä–µ—Å';
                        }
                        return error;
                    }}
                />
                <ErrorMessage name="email" component="div" />

                <button type="submit">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</button>
            </Form>
        </Formik>
    );
}

export default RegistrationForm;`}
                />
            </Typography>
            <Typography variant="h5" paragraph>
                –í—ã–≤–æ–¥
            </Typography>
            <Typography paragraph>
                –ò—Å–ø–æ–ª—å–∑—É–π <b>react-hook-form</b>, –µ—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–Ω–∞ –±–æ–ª–µ–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞
                —Å –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–π –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π –∏ —Ç—ã —Ö–æ—á–µ—à—å –±–æ–ª–µ–µ –≥–∏–±–∫–æ —É–ø—Ä–∞–≤–ª—è—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ —Ñ–æ—Ä–º—ã.
            </Typography>
            <Typography paragraph>
                –ò—Å–ø–æ–ª—å–∑—É–π <b>formik</b>, –µ—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–µ–Ω –±–æ–ª–µ–µ —à–∏—Ä–æ–∫–∏–π –Ω–∞–±–æ—Ä —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏,
                –≤–∫–ª—é—á–∞—è –∫–æ–º–ø–ª–µ–∫—Å–Ω—É—é –≤–∞–ª–∏–¥–∞—Ü–∏—é, –∏ —É–¥–æ–±—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è, –æ—Å–æ–±–µ–Ω–Ω–æ –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö —Ñ–æ—Ä–º.
            </Typography>
        </div>
    );
};

export default Forms;
